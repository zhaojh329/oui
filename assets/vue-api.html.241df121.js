import{_ as i,r as p,o as l,c as u,a,w as t,e as o,b as n,d as s}from"./app.9ff75c61.js";const r={},d=o(`<h1 id="vue-api" tabindex="-1"><a class="header-anchor" href="#vue-api" aria-hidden="true">#</a> Vue API</h1><p>The Oui framework registers some instance objects in Vue for easy invocation by individual pages. The variable name &#39;vm&#39; (short for ViewModel) is used in the documentation to denote Vue instances.</p><h2 id="vm-oui" tabindex="-1"><a class="header-anchor" href="#vm-oui" aria-hidden="true">#</a> vm.$oui</h2><h3 id="state-global-state" tabindex="-1"><a class="header-anchor" href="#state-global-state" aria-hidden="true">#</a> state: global state</h3><p>A reactive object with the following fields</p><table><thead><tr><th>Name</th><th>Type</th><th>description</th></tr></thead><tbody><tr><td>locale</td><td>String</td><td>The current language</td></tr><tr><td>theme</td><td>String</td><td>The current theme</td></tr><tr><td>hostname</td><td>String</td><td>The current hostname of the system</td></tr></tbody></table><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ $oui.state.locale }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ $oui.state.theme }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ $oui.state.hostname }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="call-call-the-backend-api" tabindex="-1"><a class="header-anchor" href="#call-call-the-backend-api" aria-hidden="true">#</a> call: Call the backend API</h3><p>vm.$oui.call(mod, func, [param])</p>`,9),k=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"$oui"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'system'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'get_cpu_time'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" times "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token operator"},"..."),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-lua ext-lua line-numbers-mode"},[n("pre",{class:"language-lua"},[n("code",null,[n("span",{class:"token comment"},"-- /usr/share/oui/rpc/system.lua"),s(`

`),n("span",{class:"token keyword"},"local"),s(" fs "),n("span",{class:"token operator"},"="),s(" require "),n("span",{class:"token string"},"'oui.fs'"),s(`

`),n("span",{class:"token keyword"},"local"),s(" M "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(" M"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get_cpu_time"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"local"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"for"),s(" line "),n("span",{class:"token keyword"},"in"),s(" io"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"lines"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'/proc/stat'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"do"),s(`
        `),n("span",{class:"token keyword"},"local"),s(" cpu "),n("span",{class:"token operator"},"="),s(" line"),n("span",{class:"token punctuation"},":"),n("span",{class:"token function"},"match"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'^(cpu%d?)'"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" cpu "),n("span",{class:"token keyword"},"then"),s(`
            `),n("span",{class:"token keyword"},"local"),s(" times "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token keyword"},"for"),s(" field "),n("span",{class:"token keyword"},"in"),s(" line"),n("span",{class:"token punctuation"},":"),n("span",{class:"token function"},"gmatch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'%S+'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"do"),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" field"),n("span",{class:"token punctuation"},":"),n("span",{class:"token function"},"match"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'cpu'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"then"),s(`
                    times`),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"#"),s("times "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"tonumber"),n("span",{class:"token punctuation"},"("),s("field"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token keyword"},"end"),s(`
            `),n("span",{class:"token keyword"},"end"),s(`
            result`),n("span",{class:"token punctuation"},"["),s("cpu"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(` times
        `),n("span",{class:"token keyword"},"end"),s(`
    `),n("span",{class:"token keyword"},"end"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(" times "),n("span",{class:"token operator"},"="),s(" result "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"end"),s(`

`),n("span",{class:"token keyword"},"return"),s(` M
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),m=o(`<h3 id="ubus-encapsulation-of-call" tabindex="-1"><a class="header-anchor" href="#ubus-encapsulation-of-call" aria-hidden="true">#</a> ubus: Encapsulation of <code>call</code></h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">ubus</span><span class="token punctuation">(</span><span class="token string">&#39;system&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;validate_firmware_image&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/tmp/firmware.bin&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> valid <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Equivalent to</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$oui</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;ubus&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;call&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">object</span><span class="token operator">:</span> <span class="token string">&#39;system&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;validate_firmware_image&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/tmp/firmware.bin&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="login-log-in" tabindex="-1"><a class="header-anchor" href="#login-log-in" aria-hidden="true">#</a> login: log in</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="logout-log-out" tabindex="-1"><a class="header-anchor" href="#logout-log-out" aria-hidden="true">#</a> logout: log out</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setlocale-switch-the-language" tabindex="-1"><a class="header-anchor" href="#setlocale-switch-the-language" aria-hidden="true">#</a> setLocale: switch the language</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">setLocale</span><span class="token punctuation">(</span><span class="token string">&#39;en&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="settheme-switch-the-theme" tabindex="-1"><a class="header-anchor" href="#settheme-switch-the-theme" aria-hidden="true">#</a> setTheme: Switch the theme</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token string">&#39;dark&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="sethostname-set-the-system-s-hostname" tabindex="-1"><a class="header-anchor" href="#sethostname-set-the-system-s-hostname" aria-hidden="true">#</a> setHostname: Set the system&#39;s hostname</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">setHostname</span><span class="token punctuation">(</span><span class="token string">&#39;OpenWrt&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You need to set the hostname by calling this function so that <code>$oui.state.hostname</code> can be updated.</p></div><h3 id="reloadconfig-reload-config" tabindex="-1"><a class="header-anchor" href="#reloadconfig-reload-config" aria-hidden="true">#</a> reloadConfig: reload config</h3><p>Encapsulation of the following UBUS operations</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ubus call <span class="token function">service</span> event <span class="token string">&#39;{&quot;type&quot;:&quot;config.change&quot;, &quot;data&quot;: {&quot;package&quot;: &quot;system&quot;}}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">reloadConfig</span><span class="token punctuation">(</span><span class="token string">&#39;system&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="reconnect-wait-until-the-system-restarts-finish" tabindex="-1"><a class="header-anchor" href="#reconnect-wait-until-the-system-restarts-finish" aria-hidden="true">#</a> reconnect: Wait until the system restarts finish</h3><p>This method is useful when performing a restart operation.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$oui<span class="token punctuation">.</span><span class="token function">reconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="timer" tabindex="-1"><a class="header-anchor" href="#timer" aria-hidden="true">#</a> $timer</h2><p>You might have written something like this before:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">timer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">interval</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">beforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>interval<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After using <code>vm.$timer</code>, it looks like this:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">getDhcpLeases</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$timer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;dhcp&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getDhcpLeases<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>vm.$timer.create</code> takes three arguments:</p><ul><li>name: Timer name (cannot be repeated)</li><li>callback: The callback method</li><li>option: options</li></ul><p><code>option</code> includes the following fields:</p><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>time</td><td>Number</td><td>Timeout or interval (default value: 1000)</td></tr><tr><td>autostart</td><td>Boolean</td><td>Whether to automatically start after creation (default is true)</td></tr><tr><td>immediate</td><td>Boolean</td><td>Whether to execute a callback function immediately after creation</td></tr><tr><td>repeat</td><td>Boolean</td><td>Whether to repeat</td></tr></tbody></table><p><code>vm.$timer.start</code>: Start timer(If you set autostart as false, you need to call the function)</p><p><code>vm.$timer.stop</code>: Stop the timer (the user does not need to call this function unless otherwise required)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$timer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$timer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="md5" tabindex="-1"><a class="header-anchor" href="#md5" aria-hidden="true">#</a> $md5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> md5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$md5</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36);function h(g,b){const e=p("CodeGroupItem"),c=p("CodeGroup");return l(),u("div",null,[d,a(c,null,{default:t(()=>[a(e,{title:"Vue",active:""},{default:t(()=>[k]),_:1}),a(e,{title:"Lua"},{default:t(()=>[v]),_:1})]),_:1}),m])}const y=i(r,[["render",h],["__file","vue-api.html.vue"]]);export{y as default};
